<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fox.api.dao.stock.mapper.StockUpDownMapper">
    <resultMap id="BasicResultMap" type="com.fox.api.dao.stock.entity.StockUpDownEntity">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="stock_id" property="stockId" jdbcType="INTEGER" />
        <result column="day_num" property="dayNum" jdbcType="INTEGER" />
        <result column="up_rate" property="upRate" jdbcType="DECIMAL" />
        <result column="down_rate" property="downRate" jdbcType="DECIMAL" />
    </resultMap>

    <insert id="insert" parameterType="com.fox.api.dao.stock.entity.StockUpDownEntity" keyColumn="id"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_stock_up_down_shadow (
            stock_id,
            day_num,
            up_rate,
            down_rate
        )
        VALUES
            (
                #{stockId},
                #{dayNum},
                #{upRate},
                #{downRate}
            );
    </insert>

    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO t_stock_up_down_shadow (
            stock_id,
            day_num,
            up_rate,
            down_rate
        )
        VALUES
        <foreach collection ="list" item="stockUpDownEntity" index= "index" separator =",">
            (
                #{stockUpDownEntity.stockId},
                #{stockUpDownEntity.dayNum},
                #{stockUpDownEntity.upRate},
                #{stockUpDownEntity.downRate}
            )
        </foreach >
    </insert>

    <select id="getList" resultMap="BasicResultMap">
        SELECT
            *
        FROM
            t_stock_up_down
        ORDER BY
            ${orderBy}
        LIMIT ${limit};
    </select>

    <update id="createShadow">
        CREATE TABLE IF NOT EXISTS t_stock_up_down_shadow LIKE t_stock_up_down;
    </update>

    <update id="shadowConvert">
        RENAME TABLE
            t_stock_up_down TO t_stock_up_down_temp,
            t_stock_up_down_shadow TO t_stock_up_down,
            t_stock_up_down_temp TO t_stock_up_down_shadow;
    </update>

    <update id="dropShadow">
        DROP TABLE IF EXISTS t_stock_up_down_shadow
    </update>

    <update id="optimize">
        OPTIMIZE TABLE t_stock_up_down;
    </update>
</mapper>